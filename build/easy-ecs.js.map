{"mappings":"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","sources":["./core/utils.js","./core/ecs.js","./core/addons.js"],"sourcesContent":["export function UUID () {\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  )\n}\n","import { UUID } from './utils'\n\nexport class Addon {\n  static get name(){ return this.constructor.name } \n  static onInit = (world) => {}\n  static onStart = (world) => {}\n  static onBeforeUpdate = (world, time) => {}\n  static onAfterUpdate = (world, time) => {}\n}\nexport class World {\n  addons = [];\n  systems = [];\n  systemsList = [];\n  entities = [];\n  constructor(props = {addons: [], systems: []}){\n    this.addons = props.addons\n    props.systems.forEach(system => {\n      this.systems = [...this.systems, new system()]\n    })\n    this.init()\n  }\n  addEntity(entity){\n    this.entities.push(entity)\n  }\n  start(){\n    this.addons.forEach(addon => addon.onStart(this))\n  }\n  init(){\n    // const now = performance.now()\n    this.addons.forEach(addon => addon.onInit(this))\n    this.systems.forEach(system => {\n      const entities = this.entities.filter(\n        entity => system.dependencies.every(\n          dependency => entity.components.indexOf(dependency.name) >= 0\n        )\n      )\n      system.onInit(entities)\n    })\n    // console.log('init took', performance.now() - now, 'ms\\n')\n  }\n  update(time){\n    // const now = performance.now()\n    this.addons.forEach(addon => addon.onBeforeUpdate(this, time))\n    this.systems.forEach(system => {\n      const entities = this.entities.filter(\n        entity => system.dependencies.every(\n          dependency => entity.components.indexOf(dependency.name) >= 0\n        )\n      )\n      system.onUpdate(entities)\n    })\n    this.addons.forEach(addon => addon.onAfterUpdate(this, time))\n    // console.log('update took', performance.now() - now, 'ms\\n')\n  }\n}\nexport class Entity {\n  id = UUID();\n  components = []\n  static components = []\n  constructor(world, values) {\n    this.constructor.components.forEach(component => {\n      this.addComponent(component, values);\n    })\n    world.addEntity(this);\n  }\n  addComponent(component, values){\n    this.components.push(component.name)\n    component.props.forEach(prop => {\n      this[prop] = values[prop] ? values[prop] : component[prop]\n    })\n  }\n  serialize(){\n    return JSON.stringify(this)\n  }\n  unserialize(json){\n    const props = JSON.parse(json)\n    Object.keys(props).forEach(prop => {\n      this[prop] = props[prop] \n    })\n  }\n  destroy(){}\n}\nexport class Component {\n  static get props(){\n    return Object.keys(this)\n  }\n  static get name(){\n    return this.constructor.name\n  }\n}\nexport class System {\n  get name(){ return this.constructor.name }\n  dependencies = [];\n  onInit = (entities) => {};\n  onUpdate = (entities) => {};\n}\n","import { UUID } from './utils';\nimport { Addon, Entity } from './ecs'\n\nexport class Time extends Addon {\n  static time = 0;\n  static delta = 0;\n  static elapsed = 0;\n  static onBeforeUpdate = (world, time) => {\n    Time.delta = time - Time.time;\n    Time.time = time;\n    Time.elapsed += Time.delta;\n  }\n}\nexport class Loop extends Addon {\n  static raf = null;\n  static onStart = (world) => {\n    Loop.raf = requestAnimationFrame(world.update.bind(world));\n  }\n  static onBeforeUpdate = (world) => {\n    Loop.raf = requestAnimationFrame(world.update.bind(world));\n  }\n  static stop = () => {\n    cancelAnimationFrame(Loop.raf);\n    Loop.raf = null;\n  }\n  static get isRunning(){\n    return Loop.raf !== null;\n  }\n}\nexport class Input extends Addon {\n  static keypress = null;\n  static keydown = [];\n  static mouse = {x: 0, y: 0};\n  static INPUT_LEFT = 37;\n  static INPUT_RIGHT = 39;\n  static INPUT_UP = 38;\n  static INPUT_DOWN = 40;\n  static onInit = (world) => {\n    document.addEventListener('keydown', evt => {\n      if(Input.keydown.indexOf(evt.keyCode) !== -1) return\n      Input.keydown = [...Input.keydown, evt.keyCode];\n    });\n    document.addEventListener('keyup', evt => {\n      Input.keydown.splice(Input.keydown.indexOf(evt.keyCode), 1);\n    })\n    document.addEventListener('mousemove', evt => {\n      Input.mouse = {x: evt.clientX, y: evt.clientY};\n    });\n  }\n  static onBeforeUpdate = (world) => {\n    Input.keypress = Input.keydown\n  }\n  static onAfterUpdate = (world) => {\n    Input.keypress = null;\n  }\n  static isPressed = (key) => {\n    return Input.keypress.indexOf(key) !== -1\n  } \n}\nexport class Renderer extends Addon {\n  static canvas = null;\n  static ctx = null;\n  static width = 0;\n  static height = 0;\n  static onInit = (world) => {\n    Renderer.canvas = document.getElementById('game');\n    Renderer.ctx = Renderer.canvas.getContext('2d');\n    Renderer.width = 512;\n    Renderer.height = 512;\n    Renderer.canvas.width = Renderer.width * window.devicePixelRatio;\n    Renderer.canvas.height = Renderer.height * window.devicePixelRatio;\n    Renderer.canvas.style['width'] = Renderer.width;\n    Renderer.canvas.style['height'] = Renderer.height;\n  }\n  static onBeforeUpdate = (world) => {\n    Renderer.ctx.clearRect(0, 0, Renderer.canvas.width, Renderer.canvas.height);\n  }\n}\nexport class SaveGame extends Addon {\n  static world = null;\n  static onInit = (world) => {\n    SaveGame.world = world;\n  }\n  static save = () => {\n    const saveFile = {\n      id: UUID(),\n      timestamp: Date.now(),\n      entities: this.world.entities.map(entity => entity.serialize())\n    }\n    localStorage.setItem(`save${saveFile.id}`, JSON.stringify(saveFile))\n    return saveFile.id\n  }\n  static restore = (id) => {\n    const saveFile = localStorage.getItem(`save${id}`)\n    const saveData = JSON.parse(saveFile);\n    SaveGame.world.entities = []\n    saveData.entities.forEach(entityData => {\n      new Entity(SaveGame.world).unserialize(entityData)\n    })\n  }\n}"],"names":["UUID","replace","c","crypto","getRandomValues","Uint8Array","toString","Addon","this","constructor","name","world","time","World","_this","props","arguments","length","undefined","addons","systems","$db83d7f171f043bdd8491f6c49fe6d4$var$_classCallCheck","$db83d7f171f043bdd8491f6c49fe6d4$var$_defineProperty","forEach","system","concat","$db83d7f171f043bdd8491f6c49fe6d4$var$_toConsumableArray","init","entity","entities","push","_this2","addon","onStart","_this3","onInit","filter","dependencies","every","dependency","components","indexOf","_this4","onBeforeUpdate","onUpdate","onAfterUpdate","Entity","values","_this5","$d690541ea54d69aa1e7beb3c5a17d62$export$UUID","component","addComponent","addEntity","_this6","prop","JSON","stringify","json","_this7","parse","Object","keys","Component","System","Time","delta","elapsed","Loop","raf","requestAnimationFrame","update","bind","cancelAnimationFrame","Input","x","y","document","addEventListener","evt","keydown","keyCode","$bc8f1ef60e7b47af6b24224a5bc06976$var$_toConsumableArray","splice","mouse","clientX","clientY","keypress","key","Renderer","canvas","getElementById","ctx","getContext","width","height","window","devicePixelRatio","style","clearRect","SaveGame","saveFile","id","timestamp","Date","now","map","serialize","localStorage","setItem","getItem","saveData","entityData","unserialize"],"version":3,"file":"easy-ecs.js.map"}