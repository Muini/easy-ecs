"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _RequestTracker = require("../RequestTracker");

var _TargetResolver = _interopRequireDefault(require("../TargetResolver"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class TargetRequestRunner extends _RequestTracker.RequestRunner {
  constructor(opts) {
    super(opts);

    _defineProperty(this, "targetResolver", void 0);

    _defineProperty(this, "assetGraph", void 0);

    this.type = 'target_request';
    this.targetResolver = new _TargetResolver.default(opts.options);
    this.assetGraph = opts.assetGraph;
  }

  run(request) {
    return this.targetResolver.resolve(request.packagePath);
  }

  onComplete(request, result, api) {
    this.assetGraph.resolveTargets(request, result.targets, api.getId()); // Connect files like package.json that affect the target
    // resolution so we invalidate when they change.

    for (let file of result.files) {
      api.invalidateOnFileUpdate(file.filePath);
    }
  }

}

exports.default = TargetRequestRunner;