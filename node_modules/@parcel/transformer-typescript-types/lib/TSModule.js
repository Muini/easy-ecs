"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TSModule = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class TSModule {
  constructor() {
    _defineProperty(this, "imports", void 0);

    _defineProperty(this, "exports", void 0);

    _defineProperty(this, "bindings", void 0);

    _defineProperty(this, "names", void 0);

    _defineProperty(this, "used", void 0);

    this.imports = new Map();
    this.exports = [];
    this.bindings = new Map();
    this.names = new Map();
    this.used = new Set();
  }

  addImport(local, specifier, imported) {
    this.imports.set(local, {
      specifier,
      imported
    });

    if (imported !== '*' && imported !== 'default') {
      this.names.set(local, imported);
    }
  }

  addExport(name, imported, specifier) {
    this.exports.push({
      name,
      specifier,
      imported
    });
  }

  addWildcardExport(specifier) {
    this.exports.push({
      specifier
    });
  }

  addLocal(name, node) {
    this.bindings.set(name, node);

    if (name !== 'default') {
      this.names.set(name, name);
    }
  }

  getName(name) {
    return this.names.get(name) || name;
  }

  hasBinding(name) {
    return this.bindings.has(name);
  }

}

exports.TSModule = TSModule;