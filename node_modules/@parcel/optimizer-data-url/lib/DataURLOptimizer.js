"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _plugin = require("@parcel/plugin");

var _utils = require("@parcel/utils");

var _mime = _interopRequireDefault(require("mime"));

var _isbinaryfile = require("isbinaryfile");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = new _plugin.Optimizer({
  async optimize({
    bundle,
    contents
  }) {
    var _mime$getType;

    let bufferContents = await (0, _utils.blobToBuffer)(contents);
    let hasBinaryContent = await (0, _isbinaryfile.isBinaryFile)(bufferContents); // Follows the data url format referenced here:
    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs

    let mimeType = (_mime$getType = _mime.default.getType(bundle.filePath)) !== null && _mime$getType !== void 0 ? _mime$getType : '';
    let encoding = hasBinaryContent ? ';base64' : '';
    let content = encodeURIComponent(hasBinaryContent ? bufferContents.toString('base64') : bufferContents.toString());
    return {
      contents: `data:${mimeType}${encoding},${content}`
    };
  }

});

exports.default = _default;