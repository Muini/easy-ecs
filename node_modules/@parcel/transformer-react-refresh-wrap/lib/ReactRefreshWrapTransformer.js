"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _semver = _interopRequireDefault(require("semver"));

var _path = _interopRequireDefault(require("path"));

var _babelAstUtils = require("@parcel/babel-ast-utils");

var _plugin = require("@parcel/plugin");

var _utils = require("@parcel/utils");

var _template = _interopRequireDefault(require("@babel/template"));

var t = _interopRequireWildcard(require("@babel/types"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const WRAPPER = _path.default.join(__dirname, 'helpers', 'helpers.js');

const wrapper = _template.default.statements(`
var helpers = require(%%helper%%);
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  %%module%%
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
`);

function shouldExclude(asset, options) {
  return !asset.isSource || !options.hot || !asset.env.isBrowser() || options.mode !== 'development' || !asset.getDependencies().find(v => v.moduleSpecifier === 'react');
}

var _default = new _plugin.Transformer({
  canReuseAST({
    ast
  }) {
    return ast.type === 'babel' && _semver.default.satisfies(ast.version, '^7.0.0');
  },

  async parse({
    asset,
    options
  }) {
    if (shouldExclude(asset, options)) {
      return null;
    }

    return (0, _babelAstUtils.parse)({
      asset,
      code: await asset.getCode(),
      options
    });
  },

  async transform({
    asset,
    options
  }) {
    let ast = await asset.getAST();

    if (!ast || shouldExclude(asset, options)) {
      return [asset];
    }

    let wrapperPath = (0, _utils.relativePath)(_path.default.dirname(asset.filePath), WRAPPER);

    if (!wrapperPath.startsWith('.')) {
      wrapperPath = './' + wrapperPath;
    }

    ast.program.program.body = wrapper({
      helper: t.stringLiteral(wrapperPath),
      module: ast.program.program.body
    });
    asset.setAST(ast); // The JSTransformer has already run, do it manually

    asset.addDependency({
      moduleSpecifier: wrapperPath
    });
    return [asset];
  },

  generate({
    asset,
    ast,
    options
  }) {
    return (0, _babelAstUtils.generate)({
      asset,
      ast,
      options
    });
  }

});

exports.default = _default;